Index: primus-kernel/arch/arm/mach-davinci/include/mach/mux.h
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/include/mach/mux.h
+++ primus-kernel/arch/arm/mach-davinci/include/mach/mux.h
@@ -165,6 +165,12 @@ enum davinci_omapl1x7_index {
 	/* UART2 function */
 	OMAPL1X7_UART2_RXD,
 	OMAPL1X7_UART2_TXD,
+
+	/* I2C function */
+	OMAPL1X7_I2C1_SCL,
+	OMAPL1X7_I2C1_SDA,
+	OMAPL1X7_I2C0_SDA,
+	OMAPL1X7_I2C0_SCL,
 };
 
 #ifdef CONFIG_DAVINCI_MUX
Index: primus-kernel/arch/arm/mach-davinci/board-omapl1x7-evm.c
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/board-omapl1x7-evm.c
+++ primus-kernel/arch/arm/mach-davinci/board-omapl1x7-evm.c
@@ -44,13 +44,24 @@
 #include <mach/soc-omapl1x7.h>
 #include <mach/serial.h>
 #include <mach/mux.h>
+#include <mach/i2c.h>
 
 #include "clock.h"
 
+static struct davinci_i2c_platform_data omapl1x7_i2c_data0 = {
+	.bus_freq       = 100,
+	.bus_delay      = 0,
+};
+
 static struct davinci_uart_config uart_config __initdata = {
 	.enabled_uarts = ((1 << 0) | (1 << 1) | (1 << 2)),
 };
 
+static void __init omapl1x7_evm_init_i2c(void)
+{
+	davinci_init_i2c(&omapl1x7_i2c_data0);
+}
+
 static void __init omapl1x7_map_io(void)
 {
 	davinci_map_common_io();
@@ -62,6 +73,7 @@ static __init void omapl1x7_evm_init(voi
 	davinci_cfg_reg(OMAPL1X7_UART2_RXD);
 	davinci_cfg_reg(OMAPL1X7_UART2_TXD);
 	davinci_serial_init(&uart_config);
+	omapl1x7_evm_init_i2c();
 }
 
 static __init void omapl1x7_evm_irq_init(void)
Index: primus-kernel/arch/arm/mach-davinci/devices.c
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/devices.c
+++ primus-kernel/arch/arm/mach-davinci/devices.c
@@ -23,6 +23,7 @@
 #include <asm/mach/map.h>
 
 #include <mach/hardware.h>
+#include <mach/omapl1x7.h>
 #include <mach/edma.h>
 #include <mach/emac.h>
 #include <mach/i2c.h>
@@ -42,6 +43,7 @@
 #define DM355_MMCSD0_BASE	     0x01E11000
 #define DM355_MMCSD1_BASE	     0x01E00000
 
+#ifndef CONFIG_MACH_OMAPL1X7_EVM
 static struct resource i2c_resources[] = {
 	{
 		.start		= DAVINCI_I2C_BASE,
@@ -60,14 +62,71 @@ static struct platform_device davinci_i2
 	.num_resources	= ARRAY_SIZE(i2c_resources),
 	.resource	= i2c_resources,
 };
+#else
+static struct resource omapl1x7_i2c_resources0[] = {
+	{
+		.start          = OMAPL1X7_I2C0_BASE,
+		.end            = OMAPL1X7_I2C0_BASE + SZ_4K - 1,
+		.flags          = IORESOURCE_MEM,
+	},
+	{
+		.start          = IRQ_OMAPL1X7_I2CINT0,
+		.end            = IRQ_OMAPL1X7_I2CINT0,
+		.flags          = IORESOURCE_IRQ,
+	},
+};
+
+static struct resource omapl1x7_i2c_resources1[] = {
+	{
+		.start          = OMAPL1X7_I2C1_BASE,
+		.end            = OMAPL1X7_I2C1_BASE + SZ_4K - 1,
+		.flags          = IORESOURCE_MEM,
+	},
+	{
+		.start          = IRQ_OMAPL1X7_I2CINT1,
+		.end            = IRQ_OMAPL1X7_I2CINT1,
+		.flags          = IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device omapl1x7_i2c_device[] = {
+	[0] = {
+		.name           = "i2c_davinci",
+		.id             = 1,
+		.num_resources  = ARRAY_SIZE(omapl1x7_i2c_resources0),
+		.resource       = omapl1x7_i2c_resources0,
+	},
+	[1] = {
+		.name           = "i2c_davinci",
+		.id             = 2,
+		.num_resources  = ARRAY_SIZE(omapl1x7_i2c_resources1),
+		.resource       = omapl1x7_i2c_resources1,
+	}
+};
+#endif
 
 void __init davinci_init_i2c(struct davinci_i2c_platform_data *pdata)
 {
+	int i = 0;
 	if (cpu_is_davinci_dm644x())
 		davinci_cfg_reg(DM644X_I2C);
 
+	if (cpu_is_omapl1x7()) {
+		davinci_cfg_reg(OMAPL1X7_I2C1_SCL);
+		davinci_cfg_reg(OMAPL1X7_I2C1_SDA);
+		davinci_cfg_reg(OMAPL1X7_I2C0_SDA);
+		davinci_cfg_reg(OMAPL1X7_I2C0_SCL);		
+	}
+
+#ifndef CONFIG_MACH_OMAPL1X7_EVM
 	davinci_i2c_device.dev.platform_data = pdata;
 	(void) platform_device_register(&davinci_i2c_device);
+#else
+	for (i = 0; i < 2; i++) {
+		omapl1x7_i2c_device[i].dev.platform_data = pdata;
+		(void) platform_device_register(&omapl1x7_i2c_device[i]);
+	}
+#endif
 }
 
 #if	defined(CONFIG_MMC_DAVINCI) || defined(CONFIG_MMC_DAVINCI_MODULE)
Index: primus-kernel/arch/arm/mach-davinci/omapl1x7.c
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/omapl1x7.c
+++ primus-kernel/arch/arm/mach-davinci/omapl1x7.c
@@ -145,6 +145,12 @@ static struct clk timer0_clk = {
 	.parent = &aux_clkin,
 };
 
+static struct clk i2c_clk = {
+	.name = "I2CCLK",
+	.parent = &pll1_sysclk4,
+	.lpsc = OMAPL1X7_LPSC_I2C,
+};
+
 static struct clk *omapl1x7_clks[] __initdata = {
 	&ref_clk,
 	&aux_clkin,
@@ -164,6 +170,7 @@ static struct clk *omapl1x7_clks[] __ini
 	&uart2_clk,
 	&timer0_clk,
 	&wdt_clk,
+	&i2c_clk,
 	NULL,
 };
 
@@ -180,6 +187,10 @@ OMAPL1X7_MUX_CFG(OMAPL1X7,	UART1_RXD,	11
 OMAPL1X7_MUX_CFG(OMAPL1X7,	UART1_TXD,	11,  12,    15,	  1,	 false)
 OMAPL1X7_MUX_CFG(OMAPL1X7,	UART2_RXD,	8,   28,    15,	  2,	 false)
 OMAPL1X7_MUX_CFG(OMAPL1X7,	UART2_TXD,	9,   0,     15,	  2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	I2C1_SCL,	8,   0,     15,   2,     false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	I2C1_SDA,	8,   4,     15,   2,     false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	I2C0_SDA,	8,   12,    15,   2,     false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	I2C0_SCL,	8,   16,    15,   2,     false)
 };
 
 void __init omapl1x7_init(void)
