Index: primus-kernel/arch/arm/mach-davinci/include/mach/debug-macro.S
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/include/mach/debug-macro.S
+++ primus-kernel/arch/arm/mach-davinci/include/mach/debug-macro.S
@@ -22,9 +22,16 @@
 		.macro addruart, rx
 		mrc	p15, 0, \rx, c1, c0
 		tst	\rx, #1			@ MMU enabled?
+#if defined(CONFIG_ARCH_OMAPL1x7)
+		moveq	\rx, #0x01d00000	@ physical base address
+		movne	\rx, #0xfe000000	@ virtual base
+		orr	\rx, \rx, #0x00d00000   @ UART 2
+		orr	\rx, \rx, #0x0000d000   @ UART 2
+#else
 		moveq	\rx, #0x01000000	@ physical base address
 		movne	\rx, #0xfe000000	@ virtual base
 		orr	\rx, \rx, #0x00c20000   @ UART 0
+#endif
 		.endm
 
 		.macro	senduart,rd,rx
Index: primus-kernel/arch/arm/mach-davinci/include/mach/serial.h
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/include/mach/serial.h
+++ primus-kernel/arch/arm/mach-davinci/include/mach/serial.h
@@ -20,6 +20,10 @@
 
 #define DM355_UART2_BASE     (IO_PHYS + 0x206000)
 
+#define OMAPL1X7_UART0_BASE     (IO_PHYS + 0x42000)
+#define OMAPL1X7_UART1_BASE     (IO_PHYS + 0x10C000)
+#define OMAPL1X7_UART2_BASE     (IO_PHYS + 0x10D000)
+
 /* DaVinci UART register offsets */
 #define UART_DAVINCI_PWREMU           0x0c
 #define UART_DM646X_SCR	              0x10
Index: primus-kernel/arch/arm/mach-davinci/serial.c
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/serial.c
+++ primus-kernel/arch/arm/mach-davinci/serial.c
@@ -137,6 +137,28 @@ void __init davinci_serial_init(struct d
 			}
 		}
 
+		if (cpu_is_omapl1x7()) {
+			p->iotype = UPIO_MEM32;
+			if (i == 0) {
+				p->membase = (char *)
+					IO_ADDRESS(OMAPL1X7_UART0_BASE);
+				p->mapbase = (unsigned long)OMAPL1X7_UART0_BASE;
+				p->irq = IRQ_OMAPL1X7_UARTINT0;
+			}
+			if (i == 1) {
+				p->membase = (char *)
+					IO_ADDRESS(OMAPL1X7_UART1_BASE);
+				p->mapbase = (unsigned long)OMAPL1X7_UART1_BASE;
+				p->irq = IRQ_OMAPL1X7_UARTINT1;
+			}
+			if (i == 2) {
+				p->membase = (char *)
+					IO_ADDRESS(OMAPL1X7_UART2_BASE);
+				p->mapbase = (unsigned long)OMAPL1X7_UART2_BASE;
+				p->irq = IRQ_OMAPL1X7_UARTINT2;
+			}
+		}
+
 		sprintf(name, "uart%d", i);
 		uart_clk = clk_get(dev, name);
 		p->uartclk = clk_get_rate(uart_clk);
