Index: primus-kernel/arch/arm/mach-davinci/board-omapl1x7-evm.c
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/board-omapl1x7-evm.c
+++ primus-kernel/arch/arm/mach-davinci/board-omapl1x7-evm.c
@@ -186,6 +186,9 @@ static struct i2c_board_info __initdata 
 		I2C_BOARD_INFO("24c256", 0x50),
 		.platform_data  = &eeprom_info,
 	},
+	{
+		I2C_BOARD_INFO("pcf8574a", 0x3f),
+	},
 };
 
 static struct davinci_i2c_platform_data omapl1x7_i2c_data0 = {
@@ -213,6 +216,28 @@ static void __init omapl1x7_map_io(void)
 	omapl1x7_init();
 }
 
+int omapl1x7_lcd_hw_init(void)
+{
+	struct i2c_client *client;
+	struct i2c_adapter *adap = i2c_get_adapter(1);
+	u32 val = 0;
+
+	list_for_each_entry(client, &adap->clients, list) {
+		if (!strcmp(client->name, "pcf8574a"))
+			break;
+	}
+	if (client == NULL) {
+		printk(KERN_ERR "PCF8574A Client not found\n");
+		return -ENODEV;
+	}
+	val = i2c_smbus_read_byte(client);
+	val &= ~(0x01 << 6);
+	i2c_smbus_write_byte(client, val);
+
+	return 0;
+}
+EXPORT_SYMBOL(omapl1x7_lcd_hw_init);
+
 static __init void omapl1x7_evm_init(void)
 {
 	davinci_cfg_reg(OMAPL1X7_UART2_RXD);
Index: primus-kernel/arch/arm/mach-davinci/devices.c
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/devices.c
+++ primus-kernel/arch/arm/mach-davinci/devices.c
@@ -30,6 +30,7 @@
 #include <mach/cpu.h>
 #include <mach/mux.h>
 #include <mach/mmc.h>
+#include <mach/omapl1x7_lcdc.h>
 
 #include "clock.h"
 
@@ -614,13 +615,76 @@ void davinci_init_emac(char *unused) {}
 #endif
 
 /*-------------------------------------------------------------------------*/
+static struct omapl1x7_lcdc_platform_data omapl1x7_evm_lcdc_pdata = {
+	.lcdc_clk_name  = "LCDCTRLCLK",
+};
+static struct resource omapl1x7_lcdc_resources[] = {
+	[0] = {	/* registers */
+		.start	= OMAPL1X7_LCD_CNTRL_BASE,
+		.end	= OMAPL1X7_LCD_CNTRL_BASE + SZ_4K - 1,
+		.flags	= IORESOURCE_MEM,
+	},
+/* XXX Next resource seems wrong.  Should use dma_* calls? -- Remove */
+	[1] = {	/* frame buffer and palette */
+		.start	= OMAPL1X7_EMIF30_ASYNC_DATA_CE5_BASE,
+		.end	= OMAPL1X7_EMIF30_ASYNC_DATA_CE5_BASE + SZ_512M - 1,
+		.flags	= IORESOURCE_MEM,
+	},
+/* END Remove */
+	[2] = {	/* interrupt */
+		.start	= IRQ_OMAPL1X7_LCDINT,
+		.end	= IRQ_OMAPL1X7_LCDINT,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device omapl1x7_lcdc_device = {
+	.name		= "omapl1x7_lcdc",
+	.id		= 0,
+	.num_resources	= ARRAY_SIZE(omapl1x7_lcdc_resources),
+	.resource	= omapl1x7_lcdc_resources,
+	.dev = {
+		.platform_data = &omapl1x7_evm_lcdc_pdata,
+	}
+};
 
 static int __init davinci_init_devices(void)
 {
+	int ret;
+
 	/* please keep these calls, and their implementations above,
 	 * in alphabetical order so they're easier to sort through.
 	 */
 	davinci_init_wdt();
+	if (cpu_is_omapl1x7()) {
+		ret = platform_device_register(&omapl1x7_lcdc_device);
+
+		if (ret)
+			return ret;
+		else {
+			davinci_cfg_reg(OMAPL1X7_LCD_D_0);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_1);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_2);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_3);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_4);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_5);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_6);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_7);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_8);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_9);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_10);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_11);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_12);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_13);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_14);
+			davinci_cfg_reg(OMAPL1X7_LCD_D_15);
+			davinci_cfg_reg(OMAPL1X7_LCD_PCLK);
+			davinci_cfg_reg(OMAPL1X7_LCD_HSYNC);
+			davinci_cfg_reg(OMAPL1X7_LCD_VSYNC);
+			davinci_cfg_reg(OMAPL1X7_NLCD_AC_ENB_CS);
+			davinci_cfg_reg(OMAPL1X7_LCD_MCLK);			
+		}
+	}
 
 	return 0;
 }
Index: primus-kernel/arch/arm/mach-davinci/include/mach/omapl1x7.h
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/include/mach/omapl1x7.h
+++ primus-kernel/arch/arm/mach-davinci/include/mach/omapl1x7.h
@@ -95,6 +95,9 @@ void omapl1x7_init_rtc(void);
 #define OMAPL1X7_I2C0_BASE		0x01C22000
 #define OMAPL1X7_I2C1_BASE		0x01E28000
 
+#define OMAPL1X7_LCD_CNTRL_BASE			0x01E13000
+#define OMAPL1X7_EMIF30_ASYNC_DATA_CE5_BASE	0xC0000000
+
 /* omapl1x7 cfg regs have to be unlocked by writing magic values to kick regs */
 #ifdef CONFIG_MACH_OMAPL1X7_EVM
 #define davinci_cfg_readl(a) ({                                         \
Index: primus-kernel/arch/arm/mach-davinci/include/mach/omapl1x7_lcdc.h
===================================================================
--- /dev/null
+++ primus-kernel/arch/arm/mach-davinci/include/mach/omapl1x7_lcdc.h
@@ -0,0 +1,18 @@
+/*
+ * Header file for TI OMAPL1X7 LCD controller platform data.
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+
+#ifndef OMAPL1X7_LCDC_PLAT_H
+#define OMAPL1X7_LCDC_PLAT_H
+
+struct omapl1x7_lcdc_platform_data {
+	const char *lcdc_clk_name;
+};
+int omapl1x7_lcd_hw_init(void);
+#endif  /* ifndef OMAPL1X7_LCDC_PLAT_H */
+
Index: primus-kernel/arch/arm/mach-davinci/omapl1x7.c
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/omapl1x7.c
+++ primus-kernel/arch/arm/mach-davinci/omapl1x7.c
@@ -214,6 +214,12 @@ static struct clk spi1_clk = {
 	.lpsc = OMAPL1X7_LPSC_SPI1,
 };
 
+static struct clk lcdc_clk = {
+	.name = "LCDCTRLCLK",
+	.parent = &pll1_sysclk2,
+	.lpsc = OMAPL1X7_LPSC_LCDCNTL,
+};
+
 static struct clk *omapl1x7_clks[] __initdata = {
 	&ref_clk,
 	&aux_clkin,
@@ -244,6 +250,7 @@ static struct clk *omapl1x7_clks[] __ini
 	&aemif_clk,
 	&spi0_clk,
 	&spi1_clk,
+	&lcdc_clk,
 	NULL,
 };
 
@@ -396,6 +403,27 @@ OMAPL1X7_MUX_CFG(OMAPL1X7,	SPI1_CLK,	8, 
 OMAPL1X7_MUX_CFG(OMAPL1X7,	NSPI1_ENA,	8,   28,    15,   1,     false)
 OMAPL1X7_MUX_CFG(OMAPL1X7,	NSPI1_SCS_0,	9,   0,     15,   1,     false)
 OMAPL1X7_MUX_CFG(OMAPL1X7,	GPIO3_10,	11,  12,    15,   8,     false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_8,	14,  24,    15,   4,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_9,	14,  28,    15,   4,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_7,	15,  24,    15,   2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_10,	15,   0,    15,   4,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_11,	15,   4,    15,   4,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_12,	15,   8,    15,   4,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_13,	15,  12,    15,   4,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_14,	15,  16,    15,   4,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_15,	15,  20,    15,   4,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_6,	16,   4,    15,   2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_3,	16,   8,    15,   2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_2,	16,  12,    15,   2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_1,	16,  16,    15,   2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_0,	16,  20,    15,   2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_PCLK,	16,  24,    15,   2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_HSYNC,	16,  28,    15,   2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_VSYNC,	17,   0,    15,   2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	NLCD_AC_ENB_CS,	17,   4,    15,   2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_MCLK,	17,   8,    15,   2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_5,	17,  12,    15,   2,	 false)
+OMAPL1X7_MUX_CFG(OMAPL1X7,	LCD_D_4,	17,  16,    15,   2,	 false)
 };
 
 void __init omapl1x7_init(void)
Index: primus-kernel/arch/arm/mach-davinci/include/mach/mux.h
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/include/mach/mux.h
+++ primus-kernel/arch/arm/mach-davinci/include/mach/mux.h
@@ -316,6 +316,29 @@ enum davinci_omapl1x7_index {
 	OMAPL1X7_NSPI1_ENA,
 	OMAPL1X7_NSPI1_SCS_0,
 	OMAPL1X7_GPIO3_10,
+
+	/* LCD function */
+	OMAPL1X7_LCD_D_8,
+	OMAPL1X7_LCD_D_9,
+	OMAPL1X7_LCD_D_7,
+	OMAPL1X7_LCD_D_10,
+	OMAPL1X7_LCD_D_11,
+	OMAPL1X7_LCD_D_12,
+	OMAPL1X7_LCD_D_13,
+	OMAPL1X7_LCD_D_14,
+	OMAPL1X7_LCD_D_15,
+	OMAPL1X7_LCD_D_6,
+	OMAPL1X7_LCD_D_3,
+	OMAPL1X7_LCD_D_2,
+	OMAPL1X7_LCD_D_1,
+	OMAPL1X7_LCD_D_0,
+	OMAPL1X7_LCD_PCLK,
+	OMAPL1X7_LCD_HSYNC,
+	OMAPL1X7_LCD_VSYNC,
+	OMAPL1X7_NLCD_AC_ENB_CS,
+	OMAPL1X7_LCD_MCLK,
+	OMAPL1X7_LCD_D_5,
+	OMAPL1X7_LCD_D_4,
 };
 
 #ifdef CONFIG_DAVINCI_MUX
