Index: primus-kernel/arch/arm/mach-davinci/psc.c
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/psc.c
+++ primus-kernel/arch/arm/mach-davinci/psc.c
@@ -24,11 +24,13 @@
 #include <linux/io.h>
 
 #include <mach/cpu.h>
-#include <mach/hardware.h>
+#include <mach/omapl1x7.h>
 #include <mach/psc.h>
 #include <mach/mux.h>
 
-#define DAVINCI_PWR_SLEEP_CNTRL_BASE 0x01C41000
+#define DAVINCI_PWR_SLEEP_CNTRL_BASE	0x01C41000
+#define OMAPL1X7_PSC0_BASE		0x01C10000
+#define OMAPL1X7_PSC1_BASE		0x01E27000
 
 /* PSC register offsets */
 #define EPCPR		0x070
@@ -39,11 +41,33 @@
 #define MDSTAT		0x800
 #define MDCTL		0xA00
 
+static u32 omapl1x7_psc_base[] = { (u32)IO_ADDRESS(OMAPL1X7_PSC0_BASE),
+				   (u32)IO_ADDRESS(OMAPL1X7_PSC1_BASE) };
+static u32 *psc_base_array;
+
 /* Enable or disable a PSC domain */
 void davinci_psc_config(unsigned int domain, unsigned int id, char enable)
 {
 	u32 epcpr, ptcmd, ptstat, pdstat, pdctl1, mdstat, mdctl, mdstat_mask;
 	void __iomem *psc_base = IO_ADDRESS(DAVINCI_PWR_SLEEP_CNTRL_BASE);
+	u32 domain_shift;
+
+	if (id > 64)
+		return;
+
+	if (cpu_is_omapl1x7())
+		psc_base_array = omapl1x7_psc_base;
+	else
+		psc_base_array = psc_base;
+
+	if (id > 32) {
+		id -= 32;
+		domain = 1;
+	}
+
+	psc_base = (void __iomem *)(psc_base_array[domain]);
+	/* XXX domain != which psc reg to use--we always use domain 0 */
+	domain_shift = 0;	
 
 	mdctl = __raw_readl(psc_base + MDCTL + 4 * id);
 	if (enable)
@@ -58,12 +82,12 @@ void davinci_psc_config(unsigned int dom
 		pdctl1 |= 0x1;
 		__raw_writel(pdctl1, psc_base + PDCTL1);
 
-		ptcmd = 1 << domain;
+		ptcmd = 1 << domain_shift;
 		__raw_writel(ptcmd, psc_base + PTCMD);
 
 		do {
 			epcpr = __raw_readl(psc_base + EPCPR);
-		} while ((((epcpr >> domain) & 1) == 0));
+		} while ((((epcpr >> domain_shift) & 1) == 0));
 
 		pdctl1 = __raw_readl(psc_base + PDCTL1);
 		pdctl1 |= 0x100;
@@ -72,14 +96,14 @@ void davinci_psc_config(unsigned int dom
 		do {
 			ptstat = __raw_readl(psc_base +
 					       PTSTAT);
-		} while (!(((ptstat >> domain) & 1) == 0));
+		} while (!(((ptstat >> domain_shift) & 1) == 0));
 	} else {
-		ptcmd = 1 << domain;
+		ptcmd = 1 << domain_shift;
 		__raw_writel(ptcmd, psc_base + PTCMD);
 
 		do {
 			ptstat = __raw_readl(psc_base + PTSTAT);
-		} while (!(((ptstat >> domain) & 1) == 0));
+		} while (!(((ptstat >> domain_shift) & 1) == 0));
 	}
 
 	if (enable)
Index: primus-kernel/arch/arm/mach-davinci/include/mach/psc.h
===================================================================
--- primus-kernel.orig/arch/arm/mach-davinci/include/mach/psc.h
+++ primus-kernel/arch/arm/mach-davinci/include/mach/psc.h
@@ -30,6 +30,10 @@
 /* Power and Sleep Controller (PSC) Domains */
 #define DAVINCI_GPSC_ARMDOMAIN      0
 #define DAVINCI_GPSC_DSPDOMAIN      1
+#define DAVINCI_GPSC0_ARMDOMAIN     DAVINCI_GPSC_ARMDOMAIN
+#define DAVINCI_GPSC0_DSPDOMAIN     DAVINCI_GPSC_DSPDOMAIN
+#define DAVINCI_GPSC1_ARMDOMAIN     2
+#define DAVINCI_GPSC1_DSPDOMAIN     3
 
 #define DAVINCI_LPSC_VPSSMSTR       0
 #define DAVINCI_LPSC_VPSSSLV        1
@@ -116,6 +120,48 @@
 #define DM646X_LPSC_TIMER1         35
 #define DM646X_LPSC_ARM_INTC       45
 
+/* OMAPL1x7 LPSC defines */
+/* PSC0 defines */
+#define OMAPL1X7_LPSC_TPCC         0
+#define OMAPL1X7_LPSC_TPTC0        1
+#define OMAPL1X7_LPSC_TPTC1        2
+#define OMAPL1X7_LPSC_EMIF25       3
+#define OMAPL1X7_LPSC_SPI0         4
+#define OMAPL1X7_LPSC_MMC_SD       5
+#define OMAPL1X7_LPSC_AINTC        6
+#define OMAPL1X7_LPSC_ARM_RAM_ROM  7
+#define OMAPL1X7_LPSC_SECU_MGR     8
+#define OMAPL1X7_LPSC_UART0        9
+#define OMAPL1X7_LPSC_SCR0_SS      10
+#define OMAPL1X7_LPSC_SCR1_SS      11
+#define OMAPL1X7_LPSC_SCR2_SS      12
+#define OMAPL1X7_LPSC_DMAX         13
+#define OMAPL1X7_LPSC_ARM          14
+#define OMAPL1X7_LPSC_GEM          15
+
+/* PSC1 defines */
+#define OMAPL1X7_LPSC_USB20        (32 + 1)
+#define OMAPL1X7_LPSC_USB11        (32 + 2)
+#define OMAPL1X7_LPSC_GPIO         (32 + 3)
+#define OMAPL1X7_LPSC_UHPI         (32 + 4)
+#define OMAPL1X7_LPSC_CPGMAC       (32 + 5)
+#define OMAPL1X7_LPSC_EMIF3C       (32 + 6)
+#define OMAPL1X7_LPSC_McASP0       (32 + 7)
+#define OMAPL1X7_LPSC_McASP1       (32 + 8)
+#define OMAPL1X7_LPSC_McASP2       (32 + 9)
+#define OMAPL1X7_LPSC_SPI1         (32 + 10)
+#define OMAPL1X7_LPSC_I2C          (32 + 11)
+#define OMAPL1X7_LPSC_UART1        (32 + 12)
+#define OMAPL1X7_LPSC_UART2        (32 + 13)
+#define OMAPL1X7_LPSC_LCDCNTL      (32 + 16)
+#define OMAPL1X7_LPSC_PWM          (32 + 17)
+#define OMAPL1X7_LPSC_ECAP         (32 + 20)
+#define OMAPL1X7_LPSC_EQEP         (32 + 21)
+#define OMAPL1X7_LPSC_SCR_P0_SS    (32 + 24)
+#define OMAPL1X7_LPSC_SCR_P1_SS    (32 + 25)
+#define OMAPL1X7_LPSC_CR_P3_SS     (32 + 26)
+#define OMAPL1X7_LPSC_L3_CBA_RAM   (32 + 31)
+
 extern void davinci_psc_config(unsigned int domain, unsigned int id,
 			       char enable);
 
